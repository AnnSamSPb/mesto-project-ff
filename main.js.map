{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Функции для работы с попапами\r\n\r\n// Открытие попапа\r\nexport const openModal = (modal) => {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\n// Закрытие попапа\r\nexport const closeModal = (modal) => {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\n// Закрытие по Esc\r\nconst handleEscKeyUp = (evt) => {\r\n  if (evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    closeModal(popup);\r\n  }\r\n};\r\n\r\n// Функция управления состоянием кнопки попапа\r\nexport const setButtonState = (button, isLoading, options = {}) => {\r\n  const {\r\n    defaultText = 'Сохранить',\r\n    loadingText = 'Сохранение...'\r\n  } = options;\r\n  \r\n  button.textContent = isLoading ? loadingText : defaultText;\r\n  button.disabled = isLoading;\r\n};\r\n\r\n// Функция слушателей закрытия по крестику и оверлею\r\nexport const setupPopupClose = (modal) => {\r\n  const closeButton = modal.querySelector(\".popup__close\");\r\n\r\n  closeButton.addEventListener(\"click\", () => {\r\n    closeModal(modal);\r\n  });\r\n\r\n  modal.addEventListener(\"mousedown\", (event) => {\r\n    if (event.target === modal) {\r\n      closeModal(modal);\r\n    }\r\n  });\r\n};\r\n","// Функция создания карточки\r\nexport const createCardElement = (cardData, handleLike, handleDelete, handleImageClick, userId) => {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const newCard = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n\r\n  // Наполнение карточки данными\r\n  newCard.querySelector(\".card__image\").src = cardData.link;\r\n  newCard.querySelector(\".card__image\").alt = `Фото места: ${cardData.name}`;\r\n  newCard.querySelector(\".card__title\").textContent = cardData.name;\r\n\r\n  // Работа с лайками\r\n  const likeButton = newCard.querySelector(\".card__like-button\");\r\n  const likeCount = newCard.querySelector(\".card__like-count\");\r\n  \r\n  likeCount.textContent = cardData.likes.length;\r\n  if (cardData.likes.some(user => user._id === userId)) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  }\r\n\r\n  // Проверка владельца и настройка кнопки удаления\r\n  const deleteButton = newCard.querySelector(\".card__delete-button\");\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.addEventListener('click', () => {\r\n      handleDelete(newCard);\r\n    })\r\n  } \r\n  else {\r\n    deleteButton.remove();\r\n  }\r\n\r\n  // Добавление обработчиков событий\r\n  likeButton.addEventListener(\"click\", handleLike);\r\n  newCard.querySelector(\".card__image\").addEventListener(\"click\", () => handleImageClick(cardData));\r\n  \r\n  return newCard;\r\n};\r\n\r\n// Функция обработчика событий - лайк\r\nexport const handleLike = (evt) => {\r\n  evt.target.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\n// Функция обработчика событий - удаление\r\nexport const handleDelete = (cardElement) => {\r\n  cardElement.remove();\r\n};\r\n","// Функция показа ошибки\r\nconst showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\n// Функция скрытия ошибки\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(config.errorClass);\r\n};\r\n\r\n// Проверка валидности поля\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\n// Проверка наличия невалидных полей\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Переключение состояния кнопки\r\nconst toggleButtonState = (inputList, buttonElement, config) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n  }\r\n};\r\n\r\n// Установка слушателей событий для формы\r\nconst setEventListeners = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, config);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      checkInputValidity(formElement, inputElement, config);\r\n      toggleButtonState(inputList, buttonElement, config);\r\n    });\r\n  });\r\n};\r\n\r\n// Включение валидации всех форм\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  \r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n    \r\n    setEventListeners(formElement, config);\r\n  });\r\n};\r\n\r\n// Очистка валидации формы\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n\r\n  // Проверяем валидность формы и обновляем состояние кнопки\r\n  toggleButtonState(inputList, buttonElement, config);\r\n};","// Конфигурация API\r\n\r\nconst config = {\r\n  apiBaseUrl: 'https://nomoreparties.co/v1/wff-cohort-38',\r\n  headers: {\r\n    authorization: '602313f1-9488-4001-aaef-0871c25d361d',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n// Универсальная проверка ответа\r\nconst checkResponse = res => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  };\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n// API для профиля\r\n\r\n// Загрузка данных профиля\r\nexport const getProfileInfoApi = () => {\r\n  return fetch(`${config.apiBaseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Обновление профиля\r\nexport const updateProfileInfoApi = (name, about) => {\r\n  return fetch(`${config.apiBaseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Обновление аватарки\r\nexport const updateAvatarApi = avatar => {\r\n  return fetch(`${config.apiBaseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// API для карточек\r\n\r\n// Загрузка начальных карточек\r\nexport const getInitialCardsApi = () => {\r\n  return fetch(`${config.apiBaseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse);\r\n};\r\n\r\n// Добавление новой карточки\r\nexport const addNewCardApi = (name, link) => {\r\n  return fetch(`${config.apiBaseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Удаление карточки\r\nexport const deleteCardApi = cardId => {\r\n  return fetch(`${config.apiBaseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Постановка лайка\r\nexport const likeCardApi = cardId => {\r\n  return fetch(`${config.apiBaseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Постановка дизлайка\r\nexport const unlikeCardApi = cardId => {\r\n  return fetch(`${config.apiBaseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n","import {\r\n  openModal,\r\n  closeModal,\r\n  setupPopupClose,\r\n  setButtonState\r\n} from '../components/modal.js';\r\nimport {\r\n  createCardElement,\r\n  handleLike,\r\n  handleDelete\r\n} from '../components/card.js';\r\nimport {\r\n  enableValidation,\r\n  clearValidation\r\n} from '../components/validation.js';\r\nimport {\r\n  getProfileInfoApi,\r\n  updateProfileInfoApi,\r\n  updateAvatarApi,\r\n  getInitialCardsApi,\r\n  addNewCardApi,\r\n  deleteCardApi,\r\n  likeCardApi,\r\n  unlikeCardApi\r\n} from './api.js';\r\nimport '../pages/index.css';\r\n\r\n// Конфигурация валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_visible'\r\n};\r\n\r\n// DOM элементы\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileImageContainer = document.querySelector('.profile__image-container');\r\nconst profileImage = document.querySelector(\".profile__image\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst popupDelete = document.querySelector(\".popup_type_confirm-delete\");\r\nconst confirmDeleteBtn = popupDelete.querySelector(\".popup__button\");\r\nconst formEditProfile = document.forms['edit-profile'];\r\nconst formAddCard = document.forms['new-place'];\r\nconst formAvatar = document.forms['avatar-form'];\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\n\r\nlet userId = null;\r\nlet currentCardToDelete = null;\r\n\r\n// Единая функция для открытия попапа с изображением\r\nconst openImagePopup = (cardData) => {\r\n  popupImage.querySelector('.popup__image')\r\n    .src = cardData.link;\r\n  popupImage.querySelector('.popup__image')\r\n    .alt = `Фото места: ${cardData.name}`;\r\n  popupImage.querySelector('.popup__caption')\r\n    .textContent = cardData.name;\r\n\r\n  openModal(popupImage);\r\n};\r\n\r\n// Обработчики форм\r\n\r\n// Обработчик отправки формы профиля\r\nconst handleProfileFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const name = formEditProfile.elements.name.value;\r\n  const about = formEditProfile.elements.description.value;\r\n  \r\n  const submitButton = formEditProfile.querySelector('.popup__button');\r\n  \r\n  setButtonState(submitButton, true);\r\n\r\n  updateProfileInfoApi(name, about)\r\n    .then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => setButtonState(submitButton, false));\r\n};\r\n\r\n// Обработчик добавления новой карточки\r\nconst handleAddCardFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const name = formAddCard.elements['place-name'].value;\r\n  const link = formAddCard.elements.link.value;\r\n\r\n  const submitButton = formAddCard.querySelector('.popup__button');\r\n  \r\n  setButtonState(submitButton, true);\r\n\r\n  addNewCardApi(name, link)\r\n    .then((newCard) => {\r\n      placesList.prepend(\r\n        createCardElement(\r\n          newCard, \r\n          (evt) => handleLikeCard(evt, newCard._id), \r\n          (element) => handleDeleteCard(newCard._id, element), \r\n          openImagePopup,\r\n          userId\r\n        )\r\n      );\r\n\r\n      formAddCard.reset();\r\n      closeModal(popupNewCard);\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => setButtonState(submitButton, false));\r\n};\r\n\r\n// Обработчик отправки формы аватврки\r\nconst handleAvatarFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const avatar = formAvatar.elements['avatar-link'].value;\r\n  \r\n  const submitButton = formAvatar.querySelector('.popup__button');\r\n  setButtonState(submitButton, true, 'Сохранить');\r\n\r\n  updateAvatarApi(avatar)\r\n    .then((userData) => {\r\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n      closeModal(popupAvatar);\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => setButtonState(submitButton, false));\r\n};\r\n\r\n// Обработчик лайка\r\nconst handleLikeCard = (evt, cardId) => {\r\n  const isLiked = evt.target.classList.contains('card__like-button_is-active');\r\n  const likeApi = isLiked ? unlikeCardApi : likeCardApi;\r\n  \r\n  likeApi(cardId)\r\n    .then(() => {\r\n      handleLike(evt);\r\n      // Обновляем счетчик лайков\r\n      const likeCount = evt.target.nextElementSibling;\r\n      likeCount.textContent = isLiked \r\n        ? parseInt(likeCount.textContent) - 1 \r\n        : parseInt(likeCount.textContent) + 1;\r\n    })\r\n    .catch(err => console.error(err));\r\n};\r\n\r\n// Обработчик удаления карточки\r\nconst handleDeleteCard = (cardId, cardElement) => {\r\n  openModal(popupDelete);\r\n  \r\n  setButtonState(confirmDeleteBtn, false, {\r\n    defaultText: 'Да',\r\n    loadingText: 'Удаление...'\r\n  });\r\n  \r\n  currentCardToDelete = { cardId, cardElement };\r\n};\r\n\r\nconfirmDeleteBtn.addEventListener('click', () => {\r\n  if (!currentCardToDelete) return;\r\n  \r\n  deleteCardApi(currentCardToDelete.cardId)\r\n    .then(() => {\r\n      handleDelete(currentCardToDelete.cardElement);\r\n      closeModal(popupDelete);\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n      setButtonState(confirmDeleteBtn, false);\r\n    })\r\n    .finally(() => {\r\n      currentCardToDelete = null;\r\n    });\r\n});\r\n\r\n// Инициализация\r\n// Инициализация карточек\r\nconst initCards = (cards, userId) => {\r\n  cards.forEach(cardData => {\r\n    placesList.append(createCardElement(\r\n      cardData,\r\n      (evt) => handleLikeCard(evt, cardData._id),\r\n      (element) => handleDeleteCard(cardData._id, element),\r\n      openImagePopup,\r\n      userId\r\n    ));\r\n  });\r\n};\r\n\r\n// Инициализация событий\r\nconst initEventListeners = () => {\r\n  formEditProfile.addEventListener('submit', handleProfileFormSubmit);\r\n  formAddCard.addEventListener('submit', handleAddCardFormSubmit);\r\n  formAvatar.addEventListener('submit', handleAvatarFormSubmit);\r\n\r\n  editButton.addEventListener('click', () => {\r\n    formEditProfile.elements.name.value = profileTitle.textContent;\r\n    formEditProfile.elements.description.value = profileDescription.textContent;\r\n    clearValidation(formEditProfile, validationConfig);\r\n    openModal(popupEdit);\r\n  });\r\n\r\n  addButton.addEventListener('click', () => {\r\n    formAddCard.reset();\r\n    clearValidation(formAddCard, validationConfig);\r\n    openModal(popupNewCard);\r\n  });\r\n\r\n  profileImageContainer.addEventListener('click', () => {\r\n    formAvatar.reset();\r\n    clearValidation(formAvatar, validationConfig);\r\n    openModal(popupAvatar);\r\n  });\r\n\r\n  setupPopupClose(popupEdit);\r\n  setupPopupClose(popupNewCard);\r\n  setupPopupClose(popupImage);\r\n  setupPopupClose(popupAvatar);\r\n  setupPopupClose(popupDelete);\r\n};\r\n\r\n// Инициализация приложения\r\nconst init = () => {\r\n  Promise.all([getProfileInfoApi(), getInitialCardsApi()])\r\n    .then(([userData, cards]) => {\r\n      userId = userData._id;\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n      initCards(cards, userId);\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n  initEventListeners();\r\n  enableValidation(validationConfig);\r\n};\r\n\r\ninit();"],"names":["openModal","modal","classList","add","document","addEventListener","handleEscKeyUp","closeModal","remove","removeEventListener","evt","key","popup","querySelector","setButtonState","button","isLoading","options","arguments","length","undefined","_options$defaultText","defaultText","_options$loadingText","loadingText","textContent","disabled","setupPopupClose","event","target","createCardElement","cardData","handleLike","handleDelete","handleImageClick","userId","newCard","content","cloneNode","src","link","alt","concat","name","likeButton","likes","some","user","_id","deleteButton","owner","hideInputError","formElement","inputElement","config","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","apiBaseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","status","likeCardApi","cardId","fetch","method","then","unlikeCardApi","validationConfig","formSelector","placesList","profileTitle","profileDescription","profileImageContainer","profileImage","popupEdit","popupNewCard","popupImage","popupAvatar","popupDelete","confirmDeleteBtn","formEditProfile","forms","formAddCard","formAvatar","editButton","addButton","currentCardToDelete","openImagePopup","handleLikeCard","isLiked","contains","toggle","likeCount","nextElementSibling","parseInt","catch","err","console","error","handleDeleteCard","cardElement","finally","all","_ref","_ref2","userData","cards","about","style","backgroundImage","avatar","append","element","initCards","preventDefault","elements","value","description","submitButton","body","JSON","stringify","updateProfileInfoApi","addNewCardApi","prepend","reset","updateAvatarApi","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}