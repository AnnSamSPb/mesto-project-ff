{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/utils.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// Функции для работы с попапами\r\n\r\n// Открытие попапа\r\nexport const openModal = (modal) => {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\n// Закрытие попапа\r\nexport const closeModal = (modal) => {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keyup\", handleEscKeyUp);\r\n};\r\n\r\n// Закрытие по Esc\r\nconst handleEscKeyUp = (evt) => {\r\n  if (evt.key === 'Escape') {\r\n    const popup = document.querySelector('.popup_is-opened');\r\n    closeModal(popup);\r\n  }\r\n};\r\n\r\n// Функция слушателей закрытия по крестику и оверлею\r\nexport const setupPopupClose = (modal) => {\r\n  const closeButton = modal.querySelector(\".popup__close\");\r\n\r\n  closeButton.addEventListener(\"click\", () => {\r\n    closeModal(modal);\r\n  });\r\n\r\n  modal.addEventListener(\"mousedown\", (event) => {\r\n    if (event.target === modal) {\r\n      closeModal(modal);\r\n    }\r\n  });\r\n};\r\n","// Конфигурация API\r\n\r\nconst config = {\r\n  apiBaseUrl: 'https://nomoreparties.co/v1/wff-cohort-38',\r\n  headers: {\r\n    authorization: '602313f1-9488-4001-aaef-0871c25d361d',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\n// Универсальная проверка ответа\r\nconst checkResponse = res => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  };\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n// API для профиля\r\n\r\n// Загрузка данных профиля\r\nexport const getProfileInfoApi = () => {\r\n  return fetch(`${config.apiBaseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Обновление профиля\r\nexport const updateProfileInfoApi = (name, about) => {\r\n  return fetch(`${config.apiBaseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, about })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Обновление аватарки\r\nexport const updateAvatarApi = avatar => {\r\n  return fetch(`${config.apiBaseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// API для карточек\r\n\r\n// Загрузка начальных карточек\r\nexport const getInitialCardsApi = () => {\r\n  return fetch(`${config.apiBaseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse);\r\n};\r\n\r\n// Добавление новой карточки\r\nexport const addNewCardApi = (name, link) => {\r\n  return fetch(`${config.apiBaseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({ name, link })\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Удаление карточки\r\nexport const deleteCardApi = cardId => {\r\n  return fetch(`${config.apiBaseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Постановка лайка\r\nexport const likeCardApi = cardId => {\r\n  return fetch(`${config.apiBaseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n\r\n// Постановка дизлайка\r\nexport const unlikeCardApi = cardId => {\r\n  return fetch(`${config.apiBaseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then(checkResponse)\r\n};\r\n","import { likeCardApi, unlikeCardApi } from '../scripts/api';\r\n\r\n// Функция создания карточки\r\nexport const createCardElement = (cardData, handleDelete, handleImageClick, userId) => {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const newCard = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n\r\n  // Наполнение карточки данными\r\n  newCard.querySelector(\".card__image\").src = cardData.link;\r\n  newCard.querySelector(\".card__image\").alt = `Фото места: ${cardData.name}`;\r\n  newCard.querySelector(\".card__title\").textContent = cardData.name;\r\n\r\n  // Работа с лайками\r\n  const likeButton = newCard.querySelector(\".card__like-button\");\r\n  const likeCount = newCard.querySelector(\".card__like-count\");\r\n  \r\n  likeCount.textContent = cardData.likes.length;\r\n  if (cardData.likes.some(user => user._id === userId)) {\r\n    likeButton.classList.add('card__like-button_is-active');\r\n  }\r\n\r\n  // Проверка владельца и настройка кнопки удаления\r\n  const deleteButton = newCard.querySelector(\".card__delete-button\");\r\n  if (cardData.owner._id === userId) {\r\n    deleteButton.addEventListener('click', () => {\r\n      handleDelete(newCard);\r\n    })\r\n  } \r\n  else {\r\n    deleteButton.remove();\r\n  }\r\n\r\n  // Добавление обработчиков событий\r\n  likeButton.addEventListener(\"click\", handleLikeCard(cardData._id, likeButton, likeCount));\r\n  newCard.querySelector(\".card__image\").addEventListener(\"click\", () => handleImageClick(cardData));\r\n  \r\n  return newCard;\r\n};\r\n\r\n// Функция обработчика событий - удаление\r\nexport const handleDelete = (cardElement) => {\r\n  cardElement.remove();\r\n};\r\n\r\n// Функция обработчика событий - лайк\r\nexport const handleLikeCard = (cardId, likeButton, likeCount) => {\r\n  return (evt) => {\r\n    evt.preventDefault();\r\n    const isLiked = evt.target.classList.contains('card__like-button_is-active');\r\n    const likeApi = isLiked ? unlikeCardApi : likeCardApi;\r\n    \r\n  likeApi(cardId)\r\n    .then(() => {\r\n      toggleLike(likeButton);\r\n      updateLikeCounter(likeCount, isLiked);\r\n    })\r\n    .catch(err => console.error(err));\r\n  };\r\n};\r\n\r\n// Вспомогательные функции\r\nconst toggleLike = (likeButton) => {\r\n  likeButton.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\nconst updateLikeCounter = (counterElement, isLiked) => {\r\n  const currentCount = parseInt(counterElement.textContent);\r\n  counterElement.textContent = isLiked ? currentCount - 1 : currentCount + 1;\r\n};\r\n","// Функция управления состоянием кнопки попапа\r\nexport const setButtonState = (button, isLoading, options = {}) => {\r\n  const {\r\n    defaultText = 'Сохранить',\r\n    loadingText = 'Сохранение...'\r\n  } = options;\r\n  \r\n  button.textContent = isLoading ? loadingText : defaultText;\r\n  button.disabled = isLoading;\r\n};\r\n","// Функция показа ошибки\r\nconst showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\n// Функция скрытия ошибки\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.textContent = '';\r\n  errorElement.classList.remove(config.errorClass);\r\n};\r\n\r\n// Проверка валидности поля\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\n// Проверка наличия невалидных полей\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Переключение состояния кнопки\r\nconst toggleButtonState = (inputList, buttonElement, config) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n  }\r\n};\r\n\r\n// Установка слушателей событий для формы\r\nconst setEventListeners = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  toggleButtonState(inputList, buttonElement, config);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', () => {\r\n      checkInputValidity(formElement, inputElement, config);\r\n      toggleButtonState(inputList, buttonElement, config);\r\n    });\r\n  });\r\n};\r\n\r\n// Включение валидации всех форм\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  \r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n    \r\n    setEventListeners(formElement, config);\r\n  });\r\n};\r\n\r\n// Очистка валидации формы\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n\r\n  // Проверяем валидность формы и обновляем состояние кнопки\r\n  toggleButtonState(inputList, buttonElement, config);\r\n};","import {\r\n  openModal,\r\n  closeModal,\r\n  setupPopupClose\r\n} from '../components/modal.js';\r\nimport {\r\n  createCardElement,\r\n  handleDelete\r\n} from '../components/card.js';\r\nimport { setButtonState } from '../components/utils.js';\r\nimport {\r\n  enableValidation,\r\n  clearValidation\r\n} from '../components/validation.js';\r\nimport {\r\n  getProfileInfoApi,\r\n  updateProfileInfoApi,\r\n  updateAvatarApi,\r\n  getInitialCardsApi,\r\n  addNewCardApi,\r\n  deleteCardApi\r\n} from './api.js';\r\nimport '../pages/index.css';\r\n\r\n// Конфигурация валидации\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_visible'\r\n};\r\n\r\n// DOM элементы\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileImageContainer = document.querySelector('.profile__image-container');\r\nconst profileImage = document.querySelector(\".profile__image\");\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupImage = document.querySelector(\".popup_type_image\");\r\nconst popupAvatar = document.querySelector(\".popup_type_avatar\");\r\nconst popupDelete = document.querySelector(\".popup_type_confirm-delete\");\r\nconst formEditProfile = document.forms['edit-profile'];\r\nconst formAddCard = document.forms['new-place'];\r\nconst formAvatar = document.forms['avatar-form'];\r\nconst editButton = document.querySelector('.profile__edit-button');\r\nconst addButton = document.querySelector('.profile__add-button');\r\nconst formButtons = {\r\n  editProfile: formEditProfile.querySelector('.popup__button'),\r\n  addCard: formAddCard.querySelector('.popup__button'),\r\n  avatar: formAvatar.querySelector('.popup__button'),\r\n  confirmDelete: popupDelete.querySelector('.popup__button') // Добавляем сюда\r\n};\r\n\r\nlet userId = null;\r\nlet currentCardToDelete = null;\r\n\r\n// Единая функция для открытия попапа с изображением\r\nconst openImagePopup = (cardData) => {\r\n  popupImage.querySelector('.popup__image')\r\n    .src = cardData.link;\r\n  popupImage.querySelector('.popup__image')\r\n    .alt = `Фото места: ${cardData.name}`;\r\n  popupImage.querySelector('.popup__caption')\r\n    .textContent = cardData.name;\r\n\r\n  openModal(popupImage);\r\n};\r\n\r\n// Обработчики форм\r\n\r\n// Обработчик отправки формы профиля\r\nconst handleProfileFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const name = formEditProfile.elements.name.value;\r\n  const about = formEditProfile.elements.description.value;\r\n  \r\n  setButtonState(formButtons.editProfile, true);\r\n\r\n  updateProfileInfoApi(name, about)\r\n    .then((userData) => {\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      closeModal(popupEdit);\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => setButtonState(formButtons.editProfile, false));\r\n};\r\n\r\n// Обработчик добавления новой карточки\r\nconst handleAddCardFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const name = formAddCard.elements['place-name'].value;\r\n  const link = formAddCard.elements.link.value;\r\n  \r\n  setButtonState(formButtons.addCard, true);\r\n\r\n  addNewCardApi(name, link)\r\n    .then((newCard) => {\r\n      placesList.prepend(\r\n        createCardElement(\r\n          newCard,\r\n          (element) => handleDeleteCard(newCard._id, element), \r\n          openImagePopup,\r\n          userId\r\n        )\r\n      );\r\n\r\n      formAddCard.reset();\r\n      closeModal(popupNewCard);\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => setButtonState(formButtons.addCard, false));\r\n};\r\n\r\n// Обработчик отправки формы аватврки\r\nconst handleAvatarFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const avatar = formAvatar.elements['avatar-link'].value;\r\n  \r\n  setButtonState(formButtons.avatar, true);\r\n\r\n  updateAvatarApi(avatar)\r\n    .then((userData) => {\r\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n      closeModal(popupAvatar);\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => setButtonState(formButtons.avatar, false));\r\n};\r\n\r\n// Обработчик удаления карточки\r\nconst handleDeleteCard = (cardId, cardElement) => {\r\n  openModal(popupDelete);\r\n  \r\n  setButtonState(formButtons.confirmDelete, false, {\r\n    defaultText: 'Да',\r\n    loadingText: 'Удаление...'\r\n  });\r\n  \r\n  currentCardToDelete = { cardId, cardElement };\r\n};\r\n\r\nformButtons.confirmDelete.addEventListener('click', () => {\r\n  if (!currentCardToDelete) return;\r\n  \r\n  setButtonState(formButtons.confirmDelete, true);\r\n\r\n  deleteCardApi(currentCardToDelete.cardId)\r\n    .then(() => {\r\n      handleDelete(currentCardToDelete.cardElement);\r\n      closeModal(popupDelete);\r\n    })\r\n    .catch(err => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonState(formButtons.confirmDelete, false)\r\n      currentCardToDelete = null;\r\n    });\r\n});\r\n\r\n// Инициализация\r\n// Инициализация карточек\r\nconst initCards = (cards, userId) => {\r\n  cards.forEach(cardData => {\r\n    placesList.append(createCardElement(\r\n      cardData,\r\n      (element) => handleDeleteCard(cardData._id, element),\r\n      openImagePopup,\r\n      userId\r\n    ));\r\n  });\r\n};\r\n\r\n// Инициализация событий\r\nconst initEventListeners = () => {\r\n  formEditProfile.addEventListener('submit', handleProfileFormSubmit);\r\n  formAddCard.addEventListener('submit', handleAddCardFormSubmit);\r\n  formAvatar.addEventListener('submit', handleAvatarFormSubmit);\r\n\r\n  editButton.addEventListener('click', () => {\r\n    formEditProfile.elements.name.value = profileTitle.textContent;\r\n    formEditProfile.elements.description.value = profileDescription.textContent;\r\n    clearValidation(formEditProfile, validationConfig);\r\n    openModal(popupEdit);\r\n  });\r\n\r\n  addButton.addEventListener('click', () => {\r\n    formAddCard.reset();\r\n    clearValidation(formAddCard, validationConfig);\r\n    openModal(popupNewCard);\r\n  });\r\n\r\n  profileImageContainer.addEventListener('click', () => {\r\n    formAvatar.reset();\r\n    clearValidation(formAvatar, validationConfig);\r\n    openModal(popupAvatar);\r\n  });\r\n\r\n  setupPopupClose(popupEdit);\r\n  setupPopupClose(popupNewCard);\r\n  setupPopupClose(popupImage);\r\n  setupPopupClose(popupAvatar);\r\n  setupPopupClose(popupDelete);\r\n};\r\n\r\n// Инициализация приложения\r\nconst init = () => {\r\n  Promise.all([getProfileInfoApi(), getInitialCardsApi()])\r\n    .then(([userData, cards]) => {\r\n      userId = userData._id;\r\n      profileTitle.textContent = userData.name;\r\n      profileDescription.textContent = userData.about;\r\n      profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n      initCards(cards, userId);\r\n    })\r\n    .catch(err => console.error(err));\r\n\r\n  initEventListeners();\r\n  enableValidation(validationConfig);\r\n};\r\n\r\ninit();"],"names":["openModal","modal","classList","add","document","addEventListener","handleEscKeyUp","closeModal","remove","removeEventListener","evt","key","popup","querySelector","setupPopupClose","event","target","config","apiBaseUrl","headers","authorization","checkResponse","res","ok","json","Promise","reject","concat","status","likeCardApi","cardId","fetch","method","then","unlikeCardApi","createCardElement","cardData","handleDelete","handleImageClick","userId","newCard","content","cloneNode","src","link","alt","name","textContent","likeButton","likeCount","likes","length","some","user","_id","deleteButton","owner","handleLikeCard","preventDefault","isLiked","contains","toggleLike","updateLikeCounter","catch","err","console","error","toggle","counterElement","currentCount","parseInt","setButtonState","button","isLoading","options","arguments","undefined","_options$defaultText","defaultText","_options$loadingText","loadingText","disabled","hideInputError","formElement","inputElement","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","validationConfig","formSelector","placesList","profileTitle","profileDescription","profileImageContainer","profileImage","popupEdit","popupNewCard","popupImage","popupAvatar","popupDelete","formEditProfile","forms","formAddCard","formAvatar","editButton","addButton","formButtons","editProfile","addCard","avatar","confirmDelete","currentCardToDelete","openImagePopup","handleDeleteCard","cardElement","finally","all","_ref","_ref2","userData","cards","about","style","backgroundImage","append","element","initCards","elements","value","description","body","JSON","stringify","updateProfileInfoApi","addNewCardApi","prepend","reset","updateAvatarApi","patternMismatch","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}